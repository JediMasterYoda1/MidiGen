version = '1.0.01'

window.addEventListener('DOMContentLoaded', () => {
    const path = require('path');
    const fs = require('fs');
    const PDFGenerator = require('pdfkit')

    const fileurl = "https://yantraz.com/tools/downversions/ElectroMidiGen/version.txt"

    let dns = require('dns')

    function isInternetOnline(callback) {
        dns.lookup('yantraz.com', function (error) {
            if (error && error.code == "ENOTFOUND") {
                callback(false);
            } else {
                callback(true);
            }
        })
    }

    try {
    fetch(fileurl)
    .then(function(response) {
        response.text().then(function(text) {
        if (text !== version) {
            alert("App version is outdated. Update using Apple/Microsoft Store.")
        }
        });
    });
} catch {alert('Unable to confirm app version, check internet connection.')}

    function showOfflineError(thevar) {
        if (!thevar) {
            alert('Unable to confirm app version, check internet connection.')
        }
    }

    isInternetOnline(showOfflineError)

    //alert(fs.readFileSync(fileurl))
    console.log(__dirname)

    document.getElementById("iwanttoexport").addEventListener("click", ()=>{okfile()})
    function okfile() {
    try { fs.mkdirSync(path.join(path.dirname(__dirname), 'saves'), { recursive: true })} catch(e) {console.log(e)}
    try {
        var thealsotext = document.getElementById("cttempo").value+','+document.getElementById("ctragam").value+'-EMGTFSEP-DNR-'
        fs.writeFileSync(path.join(path.dirname(__dirname), 'saves', document.getElementById("thexpod").value+".efmgt"), thealsotext+document.getElementById("ptrns").value, 'utf-8'); 


        let theOutput = new PDFGenerator 
        theOutput.font('Courier-BoldOblique')
        theOutput.image(path.join(__dirname, 'icon.png'), 375, 20, { width: 200, height:200})
        theOutput.pipe(fs.createWriteStream(path.join(path.dirname(__dirname), 'saves', document.getElementById("thexpod").value+".efmgt.pdf")))
        theOutput.fontSize(18)
        theOutput.text("\nTitle: " + document.getElementById("cttitle").value +'\n\nComposed By: ' + document.getElementById("ctauthor").value + '\n\nIn ragam: ' + document.getElementById("ctragam").value + '\n\nIn talam: ' + document.getElementById("cttalam").value)
        theOutput.text('\n________________________________________')
        theOutput.fontSize(14)
        theOutput.text('\n\n\n\n'+document.getElementById("ptrns").value)
        theOutput.font('Helvetica-Oblique')
        theOutput.fontSize(10)
        theOutput.text('\n\n\n_______________________________________________________________________________')
        theOutput.text('\n'+'Generated by ElectroMidiGen - download on windows/apple store')
        theOutput.end()
        alert("File saved as: " + path.join(path.dirname(__dirname), "saves/"+document.getElementById("thexpod").value+".efmgt" + "\n\n  > Pdf file also saved in same directory"))}
    catch(e) { alert('Failed to save the file !'); console.log(e)}
    }

    document.getElementById("iwanttoimport").addEventListener("click", ()=>{yesfile()})
    function yesfile() {
        try { 
            var preptex = String(fs.readFileSync(document.getElementById("thimpod").value))
            preptex = preptex.split('-EMGTFSEP-DNR-')
            document.getElementById('ptrns').value = preptex[1]
            document.getElementById('tempo__').value = preptex[0].split(',')[0].trim()
            document.getElementById('abbde').value = preptex[0].split(',')[1].trim()

    } catch(e) {document.getElementById("ptrns").value = 'Failed to import file:'+document.getElementById("thimpod").value; console.log(e)}
    }
  })